---
import BlogPostV2 from '@/layouts/BlogPostV2'
import Share from '@/components/Share'
import fetchLink from 'src/utils/config'
import ListRelatedPosts from '@/components/ListRelatedPosts'
import type {GetPostResponse} from '@/types/responses'
import {IvolunteerPageTagsEnum} from '@/types/enums'

const {postName} = Astro.params
const response = await fetch(`${fetchLink}/posts/${postName}`)
let postData = await response.json() as GetPostResponse
postData = {
	...postData,
	other_information:{
		...postData.other_information,
		deadline: postData.other_information?.deadline
		? postData.other_information.deadline.split('-').reverse().join('/')
		: null
	}
}
---
<!-- TODO: related post -->
<BlogPostV2
	postData={postData}
>
	<div class='grid grid-cols-1 md:grid-cols-[20%_auto] gap-10 mt-8'>

		<aside class='md:flex flex-col gap-8 hidden'>
			<Share />
			<div id="toc" class='sticky top-24 self-start hidden md:block transition-all duration-200'>
			</div>
		</aside>

		<!-- post -->
		<article class='max-w-full w-full'>
			<div class='prose prose-md dark:prose-invert mb-12 min-w-full'>
				<em>{postData.description}</em>
			</div>
			<div class='prose prose-md dark:prose-invert mb-12 min-w-full' set:html={postData.content}></div>

			<!-- related posts -->
			<!-- <footer>
				<h2 class='flex justify-center font-bold text-lg dark:text-white mb-2'>🌚🌚🌚 Bài viết liên quan 🌝🌝🌝</h2>
				<ListRelatedPosts tags={postData.tags as IvolunteerPageTagsEnum[]} currentPostId={postData.id} />
			</footer> -->
		</article>

	</div>
</BlogPostV2>

<script>
const tocElements = document.getElementsByTagName("h4");
const toc = [];
// Get element info and generate id for content heading
for (const ele of Array.from(tocElements)) {
	const randomId = (Math.random() + 1).toString(36);
	ele.id = randomId
	toc.push({
		id: randomId,
		name: ele.textContent,
		childrent: [],
	})
}
// Add TOC elements into HTML
const tocComponent = document.getElementById("toc");
if (tocComponent) {
	const tocHTMLElements = toc.map((x) => `
		<li class='flex flex-col'>
			<a
				href='#${x.id}'
				class="bg-slate-200 dark:bg-slate-800 dark:hover:bg-indigo-400 hover:bg-indigo-300 hover:text-white  py-1 px-4 dark:text-white rounded-full mb-2 first-letter:uppercase w-fit line-clamp-2"
			>
				${x.name}
			</a>
		</li>`
	)
	tocComponent.innerHTML = `
		<nav class='max-w-xs dark:text-black'>
			<h1 class='font-bold mb-3 text-2xl dark:text-white'>Nội dung</h1>
			<ul class='[text-wrap:balance] flex flex-col gap-1'>
				${tocHTMLElements.join('')}
			</ul>
		</nav>`
}
</script>
